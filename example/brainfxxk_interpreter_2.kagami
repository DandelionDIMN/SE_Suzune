program = ''
mem = array(256, 0)
size = 0
code = 0
idx = 0
ptr = 0
panic = false

fn OutOfRangeError()
  println('pointer out of range')
end

fn LeftBracketError()
  println('left bracket not found')
end

fn RightBracketError()
  println('right bracket not found')
end

fn RightBound()
  return idx < size
end

fn LeftBound()
  return idx >= 0
end

fn Forwarding()
  idx = idx + 1
end

fn Backwarding()
  idx = idx - 1
end

fn NotZero()
  return mem[ptr] != 0
end

fn IsZero()
  return mem[ptr] == 0
end

fn IsLeftBracket(code)
  return code == '['
end

fn IsRightBracket(code)
  return code == ']'
end

fn Jump(cond, first_cond, second_cond, major_cond, step, error)
  local reg = 0
  local code = 0
  
  if cond()
    while (step(), major_cond())
      code = program[idx]
      
      if first_cond(code)
        reg = reg + 1
      elif second_cond(code)
        if reg > 0; reg = reg - 1
        else; break; end
      end
    end

    if reg > 0
      error()
      panic = true
    end
  end
end

fn ReadCodeFromFile(path)
  stream = instream(path)
  temp = ''
  
  if !stream.good()
    return false
  end
  
  println('reading content...')
  
  while !stream.eof()
    temp = stream.get()
    println(temp)
    if temp.size() == 0; continue; end
    program = program + temp
  end
  
  return true
end

fn mainloop()
  println('program size:' + size)

  while idx < size
    if panic; break; end
    
    code = program[idx]
    
    if code == '>'
      if ptr < 255
        ptr = ptr + 1
      else
        OutOfRangeError()
        panic = true
      end
    elif code == '<'
      if ptr > 0
        ptr = ptr - 1
      else
        OutOfRangeError()
        panic = true
      end
    elif code == '+'; mem[ptr] = mem[ptr] + 1
    elif code == '-'; mem[ptr] = mem[ptr] - 1
    elif code == '.'; print(int2str(mem[ptr]))
    elif code == ','; mem[ptr] = str2int(getchar())
    elif code == '['
      Jump(IsZero, IsLeftBracket, IsRightBracket, RightBound, Forwarding, RightBracketError)
    elif code == ']'
      Jump(NotZero, IsRightBracket, IsLeftBracket, LeftBound, Backwarding, LeftBracketError)
    end
    
    idx = idx + 1
  end

  print('\n')
end

path = input('Type your source code file here:\n')
good = ReadCodeFromFile(path)

if good
  size = program.size()
  mainloop()
else
  println('Bad argument. program exit.\n')
end
