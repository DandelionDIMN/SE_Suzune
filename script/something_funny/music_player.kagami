song_list = array()
state_paused = 'Paused'
state_playing = 'Playing'

fn GetMusicFileName(str)
  local ar = str.to_array
  local dest = array()
  
  for unit in ar
    if unit != '\\'
      dest.push(unit)
    else
      dest.clear
    end
  end
  
  result = ar2string(dest)
  return result
end

fn GetSongData()
  local stream = instream('C:\\workspace\\list.m3u')
  while stream.eof != true
    local path = stream.get
    song_list.push(pair(GetMusicFileName(path), music(path)))
  end
end

fn main()
  pos = 0
  size = song_list.size
  
  song = song_list[pos]
  song.right.Play()
  
  choice = 0
  state_hint = 'Playing'
  
  while choice != 'exit'
    print(state_hint + ' - ')
    print(song.left)
    choice = input('>')
    
    case choice
    when 'pause'
      PauseMusic()
      state_hint = state_paused
    when 'resume'
      ResumeMusic()
      state_hint = state_playing
    when 'next'
      state_hint = state_playing
      if pos < (size - 1)
        pos = pos + 1
        song = song_list[pos]
        song.right.Play()
      end
    when 'prev'
      state_hint = state_playing
      if pos > 0
        pos = pos + 1
        song = song_list[pos]
        song.right.Play()
      end
    end
  end
end

println('Kagami Project version:' + version() + '\nCodename:' + patch())
println('Sample:Simple Music Player\n')
println('Build playlist info...')
GetSongData()
main()